import Head from 'next/head'
import Image from 'next/image'
import React, { useState } from 'react'
import { useStateProvider } from '../../context/AppContext'
import styles from '../../styles/Auth.module.css'

const Auth = () => {
  const [isRegistering, setIsRegistering] = useState(true);
  const { state, dispatch } = useStateProvider();
  const [first, setFirst] = useState("");
  const [last, setLast] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [studentID, setStudentID] = useState("");
  const [school, setSchool] = useState("");

  const host = "localhost";
  const port = 8080;

  const handleRegister = (event: any) => {
    event.preventDefault();
    console.log(first, last, email, password, studentID, school);

    fetch(`http://${host}:${port}/student/auth/register`, {
      method: "POST",
      mode: "cors",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        FirstName: first,
        LastName: last,
        Email: email,
        Password: password,
        StudentID: studentID,
        School: school,
      })
    })
      .then((res) => res.json())
      .then((data) => {
        console.log(data);
        setIsRegistering(false);
      });
  }
  const handleLogin = (event: any) => {
    event.preventDefault();
    fetch(`http://${host}:${port}/teacher/auth/login`, {
      method: "POST",
      mode: "cors",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        Email: email,
        Password: password,
      })
    })
      .then((res) => res.json())
      .then((data) => {
        console.log(data);
        dispatch({
          type: "LOGIN",
          payload: {
            FirstName: data.FirstName,
            LastName: data.LastName,
            Email: data.Email,
            Password: data.Password,
            ID: data.ID,
            School: data.School,
            isTeacher: true,
          },
        });
        // TODO: navigate to dashboard
      });
  }

  const handleLogout = () => {
    dispatch({
      type: "LOGOUT",
      payload: {},
    });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Class Management Center</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {isRegistering ? (
          <div>
            <h1 className={styles.title}>
              Student Register
            </h1>

            <p className={styles.description}>
              Please fill out the information below.
            </p>

            <form onSubmit={handleRegister}>
              <input type="text" name="first" placeholder='First Name' value={first} onChange={(e) => setFirst(e.target.value)} />
              <input type="text" name="last" placeholder='Last Name' value={last} onChange={(e) => setLast(e.target.value)} />
              <input type="text" name="email" placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />
              <input placeholder='Password' name="password" type='password' value={password} onChange={(e) => setPassword(e.target.value)} />
              <input type="text" name="studentID" placeholder='Student ID' value={studentID} onChange={(e) => setStudentID(e.target.value)} />
              <input type="text" name="school" placeholder='School Name' value={school} onChange={(e) => setSchool(e.target.value)} />
              <button className={styles.button} type='submit'>Register</button>
            </form>
          </div>
        ) : (
          <div>
            <h1 className={styles.title}>
              Student Sign In
            </h1>

            <p className={styles.description}>
              Sign In Below.
            </p>

            <form onSubmit={handleLogin}>
              <input type="text" name="email" placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />
              <input placeholder='Password' name="password" type='password' value={password} onChange={(e) => setPassword(e.target.value)} />
              <button className={styles.button} type='submit'>Sign in</button>
            </form>
          </div>
        )}
        <a onClick={() => setIsRegistering(!isRegistering)}>
          {isRegistering ? "Already have an account? Sign in" : "Don't have an account? Register"}
        </a>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Auth